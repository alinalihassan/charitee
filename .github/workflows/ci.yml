name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - develop
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - uses: actions/setup-node@v2
      with:
        node-version: '16'
        check-latest: true

    - name: Load .env file
      uses: xom9ikk/dotenv@v1.0.2

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Install packages
      run: yarn run bootstrap --ci

    - name: Build packages
      run: yarn run build

    - name: Build Docker Image
      run: docker build --tag charitee:latest .
    
    - uses: RafikFarhad/push-to-gcr-github-action@v3.0.2
      with:
        gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
        registry: eu.gcr.io
        project_id: charitee-project-dev-1
        image_name: charitee

    - uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
      working-directory: terraform

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: terraform

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: terraform

    - name: Terraform Linter
      uses: notrenderfarm/tflint-action@v1.2
      with:
        directory: 'terraform'

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      if: github.event_name == 'pull_request'
      working-directory: terraform

    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve
      working-directory: terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}